name: Docker image CI

on:
  push:
    branches:
      - main
      - ci1

jobs:
  start-vm:
    name: Start VM
    runs-on: trampoline
    outputs:
      label: ${{ steps.start-yc-runner.outputs.label }}
      instance-id: ${{ steps.start-yc-runner.outputs.instance-id }}
    steps:
      - name: Start YC runner
        id: start-yc-runner
        uses: yc-actions/yc-github-runner@v1
        with:
          mode: start
          yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}
          github-token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          folder-id: b1gcvl619mdunf1cqqbv
          image-id: fd8venpj0u42ujvr5glf
          zone-id: 'ru-central1-b'
          subnet-id: e2lno1rkqo63l729dlo7
          cores: 16
          memory: 32GB
          core-fraction: 100
          disk-type: network-ssd-nonreplicated
          disk-size: 93GB

  checkout:
    name: Checkout sources
    needs: start-vm
    runs-on: ${{ needs.start-vm.outputs.label }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

  check:
    name: Run checks
    needs:
      - start-vm
      - checkout
    runs-on: ${{ needs.start-vm.outputs.label }}
    steps:
      - name: Build Go
        shell: bash
        run: |
          cd yt/chyt/controller/cmd/chyt-controller && pwd
          pwd
          env
          /usr/local/go/bin/go build

      - name: Docker
        shell: bash
        run: |
          mkdir ../docker-build
          ./yt/docker/yt_nightly/build.sh --ytsaurus-source-path=$(pwd) --ytsaurus-build-path=../build --output_path=../docker-build --registy=cr.yandex/crpl84hkh3k16ihscv0j/ytsaurus-nightly --tag ${INVOCATION_ID}
      - name: Unittests
        shell: bash
        run: |
          cp ./yt/yt/scripts/run_unittests.sh ../build/
          cd ../build
          ./run_unittests.sh

#  stop-vm:
#    name: Stop VM
#    needs:
#      - start-vm
#      - check
#    runs-on: trampoline
#    if: ${{ always() }}
#    steps:
#      - name: Stop YC runner
#        uses: yc-actions/yc-github-runner@v1
#        with:
#          mode: stop
#          yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}
#          github-token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
#          label: ${{ needs.start-vm.outputs.label }}
#          instance-id: ${{ needs.start-vm.outputs.instance-id }}
